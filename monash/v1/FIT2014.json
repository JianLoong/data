{"preqs":"One of FIT1045, FIT1048, FIT1051, ENG1003 or an equivalent introductory programming unit or (FIT1040 and FIT1029), and one of MAT1830, MTH1030, ENG1005 or equivalent.Students are expected to have basic competence in computer programming.","creditPoints":6,"rules":[{"startDate":"1/01/2011","status":"ACTIVE","ruleSummary":"COREQ","ruleString":"Must be enrolled in course type {08, 09, 09-1, 09-4, 10, 13, 20, 21, 22, 30, 41, 50, 55, 65, 75, 77}","endDate":"31/12/2016"},{"startDate":"1/01/2017","status":"ACTIVE","ruleSummary":"INCOMP-IW","ruleString":"Incompatible with achievement in (I/W) {CSE2303}","endDate":""},{"startDate":"1/01/2011","status":"ACTIVE","ruleSummary":"PREREQ-IW","ruleString":"Must have passed 1 (I/W) units in {FIT1029, FIT1045}","endDate":"31/12/2016"},{"startDate":"1/01/2011","status":"ACTIVE","ruleSummary":"PREREQ","ruleString":"Must have passed 6 credit points in {MAT%, MTH%}","endDate":"31/12/2016"},{"startDate":"1/01/2017","status":"ACTIVE","ruleSummary":"PREREQ-IW","ruleString":"((Must have passed 1 (I/W) units in {ENG1003, FIT1045, FIT1048, FIT1051} or  Must have passed 2 (I/W) units in {FIT1029, FIT1040}) and  Must have passed 1 (I/W) units in {ENG1005, MAT1830, MTH1030} with grades other than {STANDARD-DEF, STANDARD-NS})","endDate":""},{"startDate":"1/01/2011","status":"ACTIVE","ruleSummary":"INCOMP-IW","ruleString":"Incompatible with achievement in (I/W) {CSE2303}","endDate":"31/12/2016"},{"startDate":"1/01/2017","status":"ACTIVE","ruleSummary":"COREQ","ruleString":"Must be enrolled in course type {08, 09, 09-1, 09-4, 10, 13, 20, 21, 22, 30, 41, 50, 55, 65, 75, 77}","endDate":""}],"locationAndTime":[{"location":"Clayton","time":["Second semester 2017 (Day)"]},{"location":"Malaysia","time":["Second semester 2017 (Day)"]}],"enjoyScore":3.990909091,"learnScore":4.035453272,"learnResponse":57,"proh":"CSE2303","scaBand":2,"unitName":"Theory of computation","description":"This unit introduces formal languages, models of computation, and computational complexity. It looks at what computers can and cannot compute. Topics include finite state automata, regular expressions, grammars, pushdown automata, computable functions, Turing machines, polynomial-time reductions, complexity classes P and NP, and NP-completeness. Skills at writing formal proofs will be developed.","enjoyResponse":113,"faculty":"Faculty of Information Technology","unitCode":"FIT2014","eftsl":0.125}