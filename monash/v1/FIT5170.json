{"preqs":"Recommended knowledge: Some exposure to multithreading. Knowledge of all Java language constructs such as loops, conditionals, methods, classes, inheritance and core Java packages. Use of O/O models such as UML diagrams.Fundamentals of data and computer communication methods and techniques, including ISO and TCP/IP layered protocols.","creditPoints":6,"rules":[{"startDate":"21/05/2008","status":"ACTIVE","ruleSummary":"COREQ","ruleString":"Must be enrolled in course type {03, 04, 05, 06, 06G, 06PG, 07, 07G, 07PG, 09, 09-1, 09-4, 11, 12, 42, 50PG, 51, 56, 61, 76, 78}","endDate":""}],"locationAndTime":[{"location":"Caulfield","time":["First semester 2017 (Day)"]}],"enjoyScore":3,"learnScore":3,"learnResponse":0,"proh":"","scaBand":2,"unitName":"Programming for distributed, parallel and mobile systems","description":"This unit focuses on the design and programming techniques essential for developing distributed software systems and applications - with Java as the teaching language. The unit presents concurrent programming primitives and concepts for distributed systems. The unit also focuses on application of concurrent techniques in distributed system designs. Programming and implementation issues and techniques of distributed applications are studied. Enabling techniques for building distributed systems are analysed and evaluated. Distributed Software Patterns are presented. The unit also includes case studies of distributed programming paradigms and their applications (e.g. JINI, JavaSpaces).","enjoyResponse":0,"faculty":"Faculty of Information Technology","unitCode":"FIT5170","eftsl":0.125}