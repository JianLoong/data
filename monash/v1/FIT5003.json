{"preqs":"(FIT9131 or FIT5131 or FIT9017) or equivalentPrerequisite knowledge: Programming experience, preferably in C or C++","creditPoints":6,"rules":[{"startDate":"1/01/2015","status":"ACTIVE","ruleSummary":"PREREQ-IW","ruleString":"For COURSE_CODE IN {2402.[5-6], 2411, 2423, 3348.1, 3349, 4312} Do true Otherwise Must have passed 1 (I/W) units in {FIT5131, FIT9017, FIT9131}","endDate":""},{"startDate":"1/01/2015","status":"ACTIVE","ruleSummary":"COREQ","ruleString":"Must be enrolled in course type {03, 04, 05, 06, 06G, 06PG, 07, 07G, 07PG, 09, 09-1, 09-4, 11, 12, 42, 50PG, 51, 56, 61, 76, 78}","endDate":""},{"startDate":"1/01/2015","status":"ACTIVE","ruleSummary":"COREQ-IW","ruleString":"Any co-req (I/W) unit in {FIT5163}","endDate":""},{"startDate":"19/06/2008","status":"ACTIVE","ruleSummary":"COREQ","ruleString":"Must be enrolled in course type {03, 04, 05, 06, 06G, 06PG, 07, 07G, 07PG, 09, 09-1, 09-4, 11, 12, 42, 50PG, 51, 56, 61, 76, 78}","endDate":"31/12/2014"},{"startDate":"19/06/2008","status":"ACTIVE","ruleSummary":"PREREQ-IW","ruleString":"For COURSE_CODE IN {2402.[5-6], 2411, 2423, 3348.1, 3349, 4312} Do true Otherwise (Must have passed 1 (I/W) units in {FIT5131, FIT9017, FIT9131} and  Must have passed 1 (I/W) units in {FIT5134, FIT9018, FIT9134} and  Must have passed 1 (I/W) units in {FIT5132, FIT9003, FIT9019, FIT9132} and  Must have passed 1 (I/W) units in {FIT5135, FIT9020, FIT9135} and  Must have passed 1 (I/W) units in {FIT4037, FIT5136} and  Must have passed 1 (I/W) units in {FIT5130, FIT9030, FIT9130})","endDate":"31/12/2014"}],"locationAndTime":[{"location":"Caulfield","time":["First semester 2017 (Day)"]}],"enjoyScore":3,"learnScore":3,"learnResponse":0,"proh":"","scaBand":2,"unitName":"Software security","description":"This unit aims to introduce the secure software development issues including secure software development life cycle, secure software design principles, secure coding practices, threat evaluation models, secure software testing, deployment and maintenance, software development and security policy integration. Students are provided with a range of practical exercises and tasks to reinforce their skills including: identification of security bugs in programs written in different programming languages, design, implementation, and testing of secure concurrent and networked applications, identification of vulnerabilities in networked and mobile/wireless applications. In addition, students will learn input validation techniques to minimise security risks, man-in-the-middle attack techniques to be able to build more secure networked applications, practical secure software testing techniques to be able to test applications for security bugs.","enjoyResponse":0,"faculty":"Faculty of Information Technology","unitCode":"FIT5003","eftsl":0.125}